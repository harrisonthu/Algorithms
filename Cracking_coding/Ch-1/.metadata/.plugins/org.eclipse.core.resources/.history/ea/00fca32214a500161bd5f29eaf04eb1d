import java.awt.Color;

public class GobbleBoard {

	/**
	 * Number of rows.
	 */
	public static final int ROWS = 4;
	
	/**
	 * Number of columns.
	 */
	public static final int COLS = 4;
	
	private Color[][] spot = new Color [ROWS] [COLS];
	private

// Exported constructors.

	/**
	 * Construct a new Go board. All spots are initially empty.
	 */
	public GobbleBoard(){
		
		}

	   /**
	    * Get the color of the given spot.
	    *
	    * @param  r  Row index, 0 .. ROWS-1.
	    * @param  c  Column index, 0 .. COLS-1.
	    *
	    * @return  Color, or null if the spot is empty.
	    */
	   public synchronized Color getSpot
	      (int r,
	       int c)
	      {
	      return spot[r][c];
	      }

	   /**
	    * Set the color of the given spot.
	    *
	    * @param  r      Row index, 0 .. ROWS-1.
	    * @param  c      Column index, 0 .. COLS-1.
	    * @param  color  Color, or null to make the spot empty.
	    */
	   public synchronized void setSpot
	      (int r,
	       int c,
	       Color color)
	      {
	      spot[r][c] = color;
	      }

	   /**
	    * Clear this Go board. All spots become empty.
	    */
	   public synchronized void clear()
	      {
	      for (int r = 0; r < ROWS; ++ r)
	         {
	         for (int c = 0; c < COLS; ++ c)
	            {
	            spot[r][c] = null;
	            }
	         }
	      }
	   
	   
	   
	   private class Position {
		   private int row;
		   private int col;
		   
		   
	   }

}

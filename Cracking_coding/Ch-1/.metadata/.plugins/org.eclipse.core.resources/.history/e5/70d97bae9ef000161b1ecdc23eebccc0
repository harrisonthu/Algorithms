import java.math.BigInteger;
import java.util.ArrayList;

/**
 * Class SortNet provides eight-element sorting network. 
 * The twist is that each comparator will be implemented 
 * as a separate thread. The program takes eight integers 
 * from the command line, runs the sorting network on those 
 * inputs, and prints the outputs.
 *
 * @author  Han Min Thu
 * @version 05-February-2017
 */


public class SortNet {

	public static void main(String[] args) throws Throwable {
		int x0 = 0;
		int x1 = 0;
		int x2 = 0;
		int x3 = 0;
		int x4 = 0;
		int x5 = 0;
		int x6 = 0;
		int x7 = 0;

		if (args.length != 8) {
			usage();
		} else {
			
			try{
			      x0 = new Integer(args[0]);
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + "<x0> =  illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }

		      try{
			      x1 = new Integer(args[1]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x1> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }  
		
		      try{
			      x2 = new Integer(args[2]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x2> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }
		      
		      
		      try{
			      x3 = new Integer(args[3]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x3> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }  
		      
		      
		      try{
			      x4 = new Integer(args[4]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x4> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }  
		      
		      
		      try{
			      x5 = new Integer(args[5]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x5> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }  
		      
		      try{
			      x6 = new Integer(args[6]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x6> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }  
		      
		      
		      try{
			      x7 = new Integer(args[7]); 
		      }
		      catch(NumberFormatException f){
		    	  System.err.println( f + " <x7> = illegal");
		    	  usage();
		      }
		      catch(IllegalArgumentException e){
		    	  System.err.println(e);
		    	  usage();
		      }
		      catch(Exception e){
		    	  usage();
		      }  
		      
		}
		
		// Create array and add all inputs into the arraylist.
		int[] F = new int [8];
		myarray.add(x0);
		myarray.add(x1);
		myarray.add(x2);
		myarray.add(x3);
		myarray.add(x4);
		myarray.add(x5);
		myarray.add(x6);
		myarray.add(x7);
		
		
		
		
		
	}


	/**
	 * Print a usage message and exit.
	 */
	private static void usage(){
		System.err.println ("Usage: java SortNet <x0> <x1> <x2> <x3> <x4> <x5> <x6> <x7> <x8>");
        System.exit (0);
	}	
	
}

import java.math.BigInteger;
import java.util.concurrent.SynchronousQueue;



public class ComputeThread implements Runnable {	// 
	int index;
	Monitor mymonitor;
	BigInteger a;
	BigInteger b;
	
	
	/*
	 * This method always returns immediately, whether or not the 
	 * image exists. When this applet attempts to draw the image on
	 * the screen, the data will be loaded. The graphics primitives 
	 * that draw the image will incrementally paint on the screen. 
	 *
	 * @param  url  an absolute URL giving the base location of the image
	 * @param  name the location of the image, relative to the url argument
	 * @return      the image at the specified URL
	 * @see         Image
	 */
	public ComputeThread(int index, Monitor mymonitor, BigInteger a, BigInteger b){
		this.index = index;
		this.mymonitor = mymonitor;
		this.a = a;
		this.b = b;
		
	}


	@Override
	public void run() {
		if(index == 0){	// fa,b(0) = a 
			mymonitor.putValue(index, a);
		}else if(index == 1){
			mymonitor.putValue(index, b);
		}else{
			try {
				mymonitor.putValue(index, mymonitor.getValue(index-1).add(mymonitor.getValue(index-2)));
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		}

		
	}
	
	}
}

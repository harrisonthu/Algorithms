import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetSocketAddress;
import java.net.SocketException;
import java.nio.charset.Charset;

import edu.rit.util.Hex;

public class Reporter {

	public static void main(String[] args) throws SocketException {

		if (args.length != 3)
			usage();
		String rhost = args[0];
		int rport = Integer.parseInt(args[1]);
		byte[] key = Hex.toByteArray(args[2]);

		DatagramSocket mailbox = new DatagramSocket(new InetSocketAddress(rhost, rport));
		byte[] payload = new byte[1024];

		RC4 rc4 = new RC4();

		while (true) {
			DatagramPacket dp = new DatagramPacket(payload, payload.length);

			mailbox.receive(dp);

			byte[] nonce = new byte[16];

			for (int i = 0; i < 15; i++) {
				nonce[i] = payload[i];
			}

			rc4.setKey(key, nonce);

			for (int i = 16; i < dp.getLength(); i++) {
				payload[i] = (byte) rc4.decrypt(payload[i]);
			}

			String msg = new String(payload, 16, dp.getLength() - 16, Charset.forName("UTF-8"));
			System.out.println(msg);
		}

	}

	/**
	 * Print a usage message and exit.
	 */
	private static void usage() {
		System.err.println("Usage: java Reporter <rhost> <rport> <key>");
		System.exit(1);
	}
}
